#include <pcl/visualization/pcl_visualizer.h>
#include <boost/thread/thread.hpp>

//-------------------------------从txt文件中读取三维坐标-------------------------------------
void CreateCloudFromTxt(const std::string& file_path, pcl::PointCloud<pcl::PointXYZ>::Ptr cloud, int a, int b, int c)
{
	std::ifstream file(file_path.c_str());
	std::string line;
	pcl::PointXYZ point;
	cout << "***in***";
	while (getline(file, line)) {
		std::stringstream ss(line);
		cout << point.x << "   " << point.y << "   " << point.z << "   " << endl;
		int i = 1;
		std::string temp;
		while (true)
		{

			if (i == a)
			{
				ss >> point.x;
				i++;
				continue;
			}
			if (i == b)
			{
				ss >> point.y;
				i++;
				continue;
			}
			if (i == c)
			{
				ss >> point.z;
				i++;
				if (ss.peek() == -1)
				{
					break;
				}
				continue;
			}
			if (ss.peek() == -1)
			{
				break;
			}
			ss >> temp;
			i++;

		}

		cloud->push_back(point);
	}
	file.close();
}


//----------------------------------------可视化---------------------------------------------




int main(int argc, char** argv) {
	// -------------------加载点云----------------------
	pcl::PointCloud<pcl::PointXYZ>::Ptr cloud(new pcl::PointCloud<pcl::PointXYZ>);
	CreateCloudFromTxt("data1.txt", cloud, 1, 2, 3);
	pcl::PointCloud<pcl::PointXYZ>::Ptr cloud1(new pcl::PointCloud<pcl::PointXYZ>);
	CreateCloudFromTxt("data2.txt", cloud1, 5, 9, 13);
	// -----------------可视化点云---------------------
	boost::shared_ptr<pcl::visualization::PCLVisualizer> viewer(new pcl::visualization::PCLVisualizer("viewer"));
	// 添加需要显示的点云数据
	pcl::visualization::PointCloudColorHandlerCustom<pcl::PointXYZ> single_color(cloud, 255, 0, 0);
	pcl::visualization::PointCloudColorHandlerCustom<pcl::PointXYZ> single_color1(cloud1, 0, 255, 0);
	viewer->addPointCloud<pcl::PointXYZ>(cloud, single_color, "example");
	viewer->addPointCloud<pcl::PointXYZ>(cloud1, single_color1, "example1");
	viewer->setPointCloudRenderingProperties(pcl::visualization::PCL_VISUALIZER_POINT_SIZE, 1, "example");
	viewer->setPointCloudRenderingProperties(pcl::visualization::PCL_VISUALIZER_POINT_SIZE, 1, "example1");
	viewer->addCoordinateSystem(1.0);
	viewer->initCameraParameters();
	viewer->spin();
}